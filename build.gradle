buildscript {
	repositories {
		maven { url "http://repo.zyrone.com/content/groups/plugins-release/" }
	}
	dependencies {
		classpath("org.springframework.build.gradle:propdeps-plugin:0.0.7")
	}
}

def leafProjects() {
	subprojects.findAll { subproject -> 
		subproject.name.startsWith('zyrone')
	}
}

def rootAndLeafProjects() {
	allprojects.findAll { project -> 
		project.name.startsWith('zyrone')
	}
}

configure(rootAndLeafProjects()) { project ->
	group = "com.zyrone"
	version = qualifyVersionIfNecessary(version)

	ext.junitVersion         	= "4.12"
	ext.hamcrestVersion      	= "1.3"
	ext.springVersion 		 	= "4.2.2.RELEASE"
	ext.springSecurityVersion	= "4.0.3.RELEASE"
	ext.hibernateVersion 	 	= "4.3.11.Final"
	ext.slf4jVersion 		 	= "1.7.19"
	ext.commonsLang3Ver 	 	= "3.4"
	ext.commonsCollections4Ver	= "4.1"

	ext.gradleScriptDir = "${rootProject.projectDir}/gradle"

	apply plugin: "propdeps"
	apply plugin: "java"
	apply from: "${gradleScriptDir}/ide.gradle"

	compileJava.options*.compilerArgs = [
		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",
		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",
		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",
		"-Xlint:try", "-Xlint:fallthrough", "-Xlint:-rawtypes", "-Xlint:deprecation",
		"-Xlint:unchecked", "-Xlint:-options"
	]

	compileTestJava.options*.compilerArgs = [
		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",
		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",
		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",
		"-Xlint:try", "-Xlint:-fallthrough", "-Xlint:-rawtypes", "-Xlint:-deprecation",
		"-Xlint:-unchecked", "-Xlint:-options"]

	compileJava {
		sourceCompatibility = 1.6
		targetCompatibility = 1.6
		options.encoding='UTF-8'
	}

	compileTestJava {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
		options.compilerArgs += "-parameters"
		options.encoding ='UTF-8'
	}

	repositories {
		maven { url "http://repo.zyrone.com/content/groups/public/" }
	}

	dependencies {
		testCompile("junit:junit:${junitVersion}") {
			exclude group:'org.hamcrest', module:'hamcrest-core'
		}
		testCompile("org.mockito:mockito-core:1.10.19") {
			exclude group:'org.hamcrest', module:'hamcrest-core'
		}
		testCompile("org.hamcrest:hamcrest-all:${hamcrestVersion}")
	}
}

configure(leafProjects()) { subproject ->
	apply from: "${gradleScriptDir}/publish-maven.gradle"

	jar {
		manifest.attributes["Created-By"] =
			"${System.getProperty("java.version")} (${System.getProperty("java.specification.vendor")})"
		manifest.attributes["Implementation-Title"] = subproject.name
		manifest.attributes["Implementation-Version"] = subproject.version

		from("${rootProject.projectDir}/src/dist") {
			include "license.txt"
			include "notice.txt"
			into "META-INF"
			expand(copyright: new Date().format("yyyy"), version: project.version)
		}
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	artifacts {
		archives sourcesJar
	}
}

project(":common:zyrone-util") {
	description = "Zyrone Common Util"

	dependencies {
		//hibernate
		compile "org.hibernate:hibernate-entitymanager:${hibernateVersion}"

		compile "org.apache.commons:commons-lang3:${commonsLang3Ver}"
		compile "org.apache.commons:commons-collections4:${commonsCollections4Ver}"
	}
}


project(":common:zyrone-common-old") {
	description = "zyrone-common-old"

	dependencies {
		//hibernate
		compile "org.hibernate:hibernate-entitymanager:${hibernateVersion}"
		compile("org.hibernate:hibernate-ehcache:${hibernateVersion}") {
			exclude group:"net.sf.ehcache", module:"ehcache-core"
		}

		//spring
		compile "org.springframework:spring-context:${springVersion}"
		compile "org.springframework:spring-context-support:${springVersion}"
		compile "org.springframework:spring-orm:${springVersion}"
		compile "org.springframework:spring-webmvc:${springVersion}"
		compile "org.springframework:spring-web:${springVersion}"
	    compile "org.springframework.security:spring-security-web:${springSecurityVersion}"
	    compile "org.springframework.security:spring-security-config:${springSecurityVersion}"

	    //ehcache
	    compile 'net.sf.ehcache:ehcache:2.10.1'

	    //连接池
	    compile 'com.alibaba:druid:1.0.13'

	    //数据库连接驱动
	    runtime 'mysql:mysql-connector-java:5.1.37'

	    //工具包
	    compile 'org.apache.commons:commons-lang3:3.4'
	    compile 'org.apache.commons:commons-collections4:4.1'
	    compile 'commons-io:commons-io:2.4'
	    compile 'com.google.guava:guava:18.0'
	    compile 'jaxen:jaxen:1.1.6'
	    compile 'com.alibaba:fastjson:1.2.7'
	    compile 'org.owasp.antisamy:antisamy:1.5.3'
	    compile 'javax.validation:validation-api:1.1.0.Final'
	    compile 'org.hibernate:hibernate-validator-annotation-processor:4.3.2.Final'

		//日志
		compile 'org.slf4j:jcl-over-slf4j:1.7.13'
		runtime 'ch.qos.logback:logback-classic:1.1.3'

		//servlet api
		provided 'javax.servlet:javax.servlet-api:3.0.1'
		provided 'javax.servlet.jsp:javax.servlet.jsp-api:2.2.1'

		compile 'org.apache.velocity:velocity:1.7'
	  	compile 'org.apache.velocity:velocity-tools:2.0'
    }
}

project(":framework:zyrone-admin") {
	description = "Zyrone Admin"

	dependencies {
		compile project(":common:zyrone-util")
		compile project(":framework:zyrone-core")
		//servlet api
		provided 'javax.servlet:javax.servlet-api:3.0.1'
		provided 'javax.servlet.jsp:javax.servlet.jsp-api:2.2.1'

	  	compile 'org.apache.velocity:velocity:1.7'
	  	compile 'org.apache.velocity:velocity-tools:2.0'
	}
}

project(":framework:zyrone-admin-old") {
	description = "Zyrone Admin"

	dependencies {
		compile project(":common:zyrone-util")
		//servlet api
		provided 'javax.servlet:javax.servlet-api:3.0.1'
		provided 'javax.servlet.jsp:javax.servlet.jsp-api:2.2.1'

	  	compile 'org.apache.velocity:velocity:1.7'
	  	compile 'org.apache.velocity:velocity-tools:2.0'
	}
}

project(":common:zyrone-xml") {
	description = "Zyrone XML"

	dependencies {

		compile project(":common:zyrone-util")

		//日志
		compile "org.slf4j:slf4j-api:${slf4jVersion}"
		compile "org.apache.commons:commons-lang3:${commonsLang3Ver}"
	}
}

project(":common:zyrone-velocity") {
	description = "Zyrone velocity"

	dependencies {

		provided 'javax.servlet:javax.servlet-api:3.0.1'
		provided 'javax.servlet.jsp:javax.servlet.jsp-api:2.2.1'

	  	compile 'org.apache.velocity:velocity:1.7'
	  	compile 'org.apache.velocity:velocity-tools:2.0'
	  	compile 'com.alibaba:fastjson:1.2.7'
		compile "org.springframework:spring-web:${springVersion}"
		compile "org.springframework:spring-webmvc:${springVersion}"
		compile 'commons-fileupload:commons-fileupload:1.3.1'

	}
}

project(":framework:zyrone-core") {
	description = "Zyrone Core"

	dependencies {

		compile project (":common:zyrone-util")
		compile project (":common:zyrone-xml")
		//hibernate
		compile "org.hibernate:hibernate-entitymanager:${hibernateVersion}"
		compile("org.hibernate:hibernate-ehcache:${hibernateVersion}") {
			exclude group:"net.sf.ehcache", module:"ehcache-core"
		}

		//spring
		compile "org.springframework:spring-context:${springVersion}"
		compile "org.springframework:spring-context-support:${springVersion}"
		compile "org.springframework:spring-orm:${springVersion}"
		compile "org.springframework:spring-webmvc:${springVersion}"
		compile "org.springframework:spring-web:${springVersion}"
	    compile "org.springframework.security:spring-security-web:${springSecurityVersion}"
	    compile "org.springframework.security:spring-security-config:${springSecurityVersion}"

	    //ehcache
	    compile 'net.sf.ehcache:ehcache:2.10.1'

	    //连接池
	    compile 'com.alibaba:druid:1.0.13'

	    //数据库连接驱动
	    runtime 'mysql:mysql-connector-java:5.1.37'

	    //工具包
	    compile 'org.apache.commons:commons-lang3:3.4'
	    compile 'org.apache.commons:commons-collections4:4.1'
	    compile 'commons-io:commons-io:2.4'
	    compile 'com.google.guava:guava:18.0'
	    compile 'jaxen:jaxen:1.1.6'
	    compile 'com.alibaba:fastjson:1.2.7'
	    compile 'org.owasp.antisamy:antisamy:1.5.3'
	    compile 'javax.validation:validation-api:1.1.0.Final'
	    compile 'org.hibernate:hibernate-validator-annotation-processor:4.3.2.Final'

		//日志
		compile 'org.slf4j:jcl-over-slf4j:1.7.13'
		runtime 'ch.qos.logback:logback-classic:1.1.3'

		//servlet api
		provided 'javax.servlet:javax.servlet-api:3.0.1'
		provided 'javax.servlet.jsp:javax.servlet.jsp-api:2.2.1'
    }
}

project(":common:zyrone-logconfig") {
	description = "Zyrone log configuration"

	dependencies {
		//servlet api
		provided 'javax.servlet:javax.servlet-api:3.0.1'
		provided 'javax.servlet.jsp:javax.servlet.jsp-api:2.2.1'

		//日志
		compile "org.slf4j:slf4j-api:${slf4jVersion}"
		provided "ch.qos.logback:logback-classic:1.1.3"
		provided 'log4j:log4j:1.2.17'
	}
}

configure(rootProject) {
	description = "Zyrone Framework"

	// don't publish the default jar for the root project
	configurations.archives.artifacts.clear()

	task wrapper(type: Wrapper) {
		description = "Generates gradlew[.bat] scripts"
		gradleVersion = "2.11"

		doLast() {
			def gradleOpts = "-XX:MaxMetaspaceSize=1024m -Xmx1024m"
			def gradleBatOpts = "$gradleOpts -XX:MaxHeapSize=256m"
			File wrapperFile = file("gradlew")
			wrapperFile.text = wrapperFile.text.replace("DEFAULT_JVM_OPTS=",
				"GRADLE_OPTS=\"$gradleOpts \$GRADLE_OPTS\"\nDEFAULT_JVM_OPTS=")
			File wrapperBatFile = file("gradlew.bat")
			wrapperBatFile.text = wrapperBatFile.text.replace("set DEFAULT_JVM_OPTS=",
				"set GRADLE_OPTS=$gradleBatOpts %GRADLE_OPTS%\nset DEFAULT_JVM_OPTS=")
		}
	}
}

/*
 * Support publication of artifacts versioned by topic branch.
 * CI builds supply `-P BRANCH_NAME=<TOPIC>` to gradle at build time.
 * If <TOPIC> starts with 'SPR-', change version
 *     from BUILD-SNAPSHOT => <TOPIC>-SNAPSHOT
 *     e.g. 3.2.1.BUILD-SNAPSHOT => 3.2.1.SPR-1234-SNAPSHOT
 */
def qualifyVersionIfNecessary(version) {
	if (rootProject.hasProperty("BRANCH_NAME")) {
		def qualifier = rootProject.getProperty("BRANCH_NAME")
		if (qualifier.startsWith("ZRN-")) {
			return version.replace('BUILD', qualifier)
		}
	}
	return version
}