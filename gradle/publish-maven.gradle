apply plugin: "propdeps-maven"

uploadArchives {
	repositories {
		mavenDeployer {
            //指定项目部署到的中央库地址，UserName和Password就是Part 1中注册的账号。  
            repository(url: "http://repo.zyrone.com/content/repositories/snapshots/") {  
                authentication(userName: "admin", password: "admin123")  
            }  
        }
	}
}

gradle.taskGraph.whenReady { taskGraph ->
    if (!taskGraph.hasTask(':release')) {
        version = version + '-SNAPSHOT'
    }
}

install {
	repositories.mavenInstaller {
		customizePom(pom, project)
	}
}

def customizePom(pom, gradleProject) {
	pom.whenConfigured { generatedPom ->
		// eliminate test-scoped dependencies (no need in maven central poms)
		generatedPom.dependencies.removeAll { dep ->
			dep.scope == "test"
		}

		// sort to make pom dependencies order consistent to ease comparison of older poms
		generatedPom.dependencies = generatedPom.dependencies.sort { dep ->
			"$dep.scope:$dep.groupId:$dep.artifactId"
		}

		// add all items necessary for maven central publication
		generatedPom.project {
			name = gradleProject.description
			description = gradleProject.description
			//url = "https://github.com/spring-projects/spring-framework"
			organization {
				name = "Cactus"
				//url = "http://projects.spring.io/spring-framework"
			}
			licenses {
				license {
					name "The Apache Software License, Version 2.0"
					url "http://www.apache.org/licenses/LICENSE-2.0.txt"
					distribution "repo"
				}
			}
			/*scm {
				url = "https://github.com/spring-projects/spring-framework"
				connection = "scm:git:git://github.com/spring-projects/spring-framework"
				developerConnection = "scm:git:git://github.com/spring-projects/spring-framework"
			}
			developers {
				developer {
					id = "jhoeller"
					name = "Juergen Hoeller"
					email = "jhoeller@pivotal.io"
				}
			}
			issueManagement {
				system = "Jira"
				url = "https://jira.springsource.org/browse/SPR"
			}*/
		}
	}
}